name: "generate changelog"

on:
  workflow_dispatch:
    inputs:
        target-branch:
          description: "The target branch of the PR"
          required: true
          default: "origin/dev"
        source-branch:
          description: "The source branch of the PR"
          required: true
          default: "origin/dev"

jobs:
    generate-changelog:
        permissions:
            contents: write
            pull-requests: write
            repository-projects: write
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'workflow_dispatch' }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
            with:
              fetch-depth: 0
              token: ${{ secrets.GITHUB_TOKEN }}
              ref: ${{ github.event.inputs.target-branch }}

          - name: checkout branch
            run: |
              git checkout ${{ github.event.inputs.source-branch }}
              git pull origin ${{ github.event.inputs.source-branch }}
              git checkout ${{ github.event.inputs.target-branch }}
    
          - name: update changelog
            run: |
              head=$(git merge-base ${{ github.event.inputs.target-branch }} ${{ github.event.inputs.source-branch }})
              echo "======== step 1 ==============" $HEAD
              temp_file="tmp_$$.md"
              echo "======== step 2 ==============" "$temp_file"
              history_feat=$(git log --pretty=format:"%s %h" $head...HEAD | grep "^feat")
              echo "-------- step 2.5 --------------" $history_feat
              echo -e '\nFx-core feat commits:\n' "$history_feat" '\n\n'> "$temp_file"
              echo "======== step 3 =============="
              history_fix=$(git log --pretty=format:"%s %h" $head...HEAD | grep "^fix") || echo "step 3 - 3.5 failed"
              echo -e "-------- step 3.5 --------------" $history_fix
              echo -e '\nFx-core fix commits:\n' "$history_fix" '\n\n'>> "$temp_file" || echo "no such content"
              echo "======== step 4 =============="
              cat PRERELEASE.md >> "$temp_file"
              mv "$temp_file" PRERELEASE.md
              echo "======== step 5 ==============" $(cat PRERELEASE.md)
          
          - name: Fetch user info
            id: fetch_user_info
            run: |
                echo "Fetching user info for $GITHUB_ACTOR"
                user_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/users/$GITHUB_ACTOR)
                echo "User info: $user_info"
                echo "::set-output name=user_info::$user_info" 
                echo "email " ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
                email=${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
                echo "user_name=$(echo $user_info | jq -r '.name')" >> $GITHUB_ENV
                echo "user_email=$(echo $email)" >> $GITHUB_ENV

          - uses: peter-evans/create-pull-request@v4
            with:
                token: ${{ secrets.GITHUB_TOKEN }}
                branch: 'changelog/${{ github.event.inputs.target-branch }}'
                title: 'docs: changelog for release'
                base: ${{ github.event.inputs.target-branch }}
                add-paths: 'PRERELEASE.md'
                commit-message: 'docs: update changelog for release'
                author: '${{ env.user_name }}'
                committer: '${{ env.user_email }}'
